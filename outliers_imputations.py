# -*- coding: utf-8 -*-
"""outliers_imputations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vbk15DLwfTib_BhvSgbcbPm7Eh4k2xVk
"""

# Commented out IPython magic to ensure Python compatibility.
#Este script ayuda a detectar outliers e imputar datos perdidos con Random Forest
#importar librerias
!pip install quilt
!pip install scikit-learn
!pip install miceforest
!pip install missingpy
!pip install scipy
!pip install statsmodels
!pip install missingno

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import missingno as mno
from sklearn import linear_model
import miceforest as mf
from sklearn.datasets import load_iris
import scipy.stats as scs
import statsmodels.api as sm
import statsmodels.tsa.api as smt
import matplotlib.pyplot as plt

# %matplotlib inline

# Read database in stata
df = pd.read_excel("/content/drive/MyDrive/bases_datos/awh.xlsx")

df.head()

#Detecting outliers
#assets
upper_ass = df.assets.mean() + 3*df.assets.std()
lower_ass = df.assets.mean() -3*df.assets.std()
new_df_ass= df[(df.assets<upper_ass) & (df.assets>lower_ass)]
df['zscore_ass'] = ( df.assets - df.assets.mean() ) / df.assets.std()
df.head(5)
df.loc[((df.zscore_ass<-3) & (df.zscore_ass>3)),'assets']=np.nan

#hours
upper_hrs = df.hours.mean() + 3*df.hours.std()
lower_hrs = df.hours.mean() -3*df.hours.std()
new_df_hrs = df[(df.hours<upper_hrs) & (df.hours>lower_hrs)]
df['zscore_hrs'] = ( df.hours - df.hours.mean() ) / df.hours.std()
df.head(5)
df.loc[((df.zscore_hrs<-3) & (df.zscore_hrs>3)),'hours']=np.nan

iris = df
# Keep an untouched copy for later
iris_orig = iris.copy()
iris.head()

# Get count of missing values by column
iris.isnull().sum()

from missingpy import MissForest

# Make an instance and perform the imputation
imputer = MissForest()
X = iris.drop(['zscore_hrs', 'died', 'situacion_lab'], axis=1)
X_imputed = imputer.fit_transform(X)

# Add imputed values as columns to the untouched dataset
#iris_orig['MF_assets'] = X_imputed[:, 5]
iris_orig['MF_hours'] = X_imputed[:, 2]
#iris_orig['MF_wage'] = X_imputed[:, 4]

iris_orig

iris_orig.to_stata('imputaciones.dta', write_index=False)